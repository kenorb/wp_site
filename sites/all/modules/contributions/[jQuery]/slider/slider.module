<?php
// $Id: slider.module,v 1.1.2.2 2008/12/16 15:37:35 marktheunissen Exp $

/**
 * @file
 * Turns a node into a coda slider
 *
 * This module allows the user to select a node type to be transformed into
 * a coda slider. The node must contain a Nodereference CCK multifield. Each
 * node referenced becomes a pane of content in the slider.
 *
 * CREDIT: http://jqueryfordesigners.com/coda-slider-effect/
 *
 */

/**
 * Implementation of hook_menu().
 */
function slider_menu() {
  $items['admin/settings/slider'] = array(
    'title' => 'Slider',
    'description' => 'Change the slider node type settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('slider_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'slider.admin.inc',
  );

  return $items;
}

/**
 * Implementation of hook_theme().
 */
function slider_theme() {
  return array(
    'slider' => array(
      'template' => 'slider',
      'arguments' => array('node' => NULL),
    ),
  );
}

/**
 * Implementation of hook_nodeapi().
 */
function slider_nodeapi(&$node, $op, $teaser = NULL, $page = NULL) {
  switch ($op) {
    case 'view':
      // abort unless we are viewing full page
      if (!$page) {
        break;
      }

      // abort if this is not a slider type
      $slider_types = variable_get('slider_node_types', array());
      if (!in_array($node->type, $slider_types)) {
        break;
      }

      // this is a slider node, so perform modifications!
      _slider_includes();
      $node->content['slider']['#value'] = theme('slider', $node);
      $node->content['slider']['#weight'] = -10;
      unset($node->content['field_slider_content']);
      break;
  }
}

/**
 * Include necessary files for the slider.
 */
function _slider_includes() {
  $modulepath = drupal_get_path('module', 'slider');
  drupal_add_css($modulepath . '/css/slider.css');

  // pass through the dynamic path so it can be accessed from the jquery
  $js = "var path_to_slider = '". base_path() . $modulepath . "';";
  drupal_add_js($js, 'inline');

  drupal_add_js($modulepath . '/js/jquery.localscroll-min.js');
  drupal_add_js($modulepath . '/js/jquery.scrollTo-min.js');
  drupal_add_js($modulepath . '/js/jquery.serialScroll-min.js');
  drupal_add_js($modulepath . '/js/slider.js');
}

/**
 * Preprocess the slider variables.
 */
function template_preprocess_slider(&$vars) {
  // abort if the slider has no nodes
  $valid = $vars['node']->field_slider_content[0]['nid'] != NULL;
  $vars['valid_slider'] = $valid ? TRUE : FALSE;
  if (!$valid) {
    return;
  }

  $num_slides = count($vars['node']->field_slider_content);

  $vars['tab'] = array();
  $vars['slide_content'] = array();

  for ($i = 0; $i < $num_slides; $i++) {
    $slide_node = node_load($vars['node']->field_slider_content[$i]['nid']);
    if (!$slide_node) {
      // node not found!
      continue;
    }

    // add the tabs
    $slide_id = "slider-nid$slide_node->nid";
    $slide_classes = 'slidetab';
    if ($i == 0) {
      $slide_classes .= ' slidetab-active';
    }
    $slide_options = array(
      'attributes' => array('class' => $slide_classes),
      'fragment' => $slide_id,
    );
    $slide_title = check_plain($slide_node->title);

    // if the slider node is set to the front page, do some special processing
    // set the link to be empty.
    $link = $_GET['q'];
    if (drupal_is_front_page() && empty($_SERVER['QUERY_STRING'])) {
      $link = '';
    }

    $vars['tabs'][] = array(
      'data' => l($slide_title, $link, $slide_options),
      'class' => 'tabtitle-' . $vars['node']->nid . '-' . $slide_node->nid,
    );

    // add the contents of each slide
    $slide_node_view = node_view($slide_node, FALSE, TRUE, FALSE);
    $vars['slide_content'][] = "<div class=\"panel\" id=\"$slide_id\">" . $slide_node_view . '</div>';
  }

  // theme nicely
  $vars['tabs_formatted'] = theme('item_list', $vars['tabs'], NULL, 'ul', array('class' => 'slidenav'));
  $vars['slider_content_formatted'] = implode("\n", $vars['slide_content']);

  // above or below
  $vars['tabs_position'] = variable_get("slider_tabs_position", 0);
}
