<?php
// $Id: meez.module,v 1.5 2008/10/10 18:39:32 greggles Exp $

/**
 * Implementation of hook_help().
 */
function meez_help($path, $arg) {
  switch ($path) {
    case 'admin/help#meez':
      return t('Allows users to use their meez avatar for your site.');
    case 'admin/settings/meez':
      return '<p>'. t('Configure meez.') .'</p>';
  }
}

/**
 * Implementation of hook_menu().
 */

function meez_menu() {
  $items = array();
  $items['admin/settings/meez'] = array(
    'title' => t('Meez Configuration'),
    'description' => t('Configure how the Meez module interacts with your site.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('meez_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}



/**
 * Implementation of meez_admin_settings form.
 */
function meez_admin_settings() {

  if (user_access('administer site configuration')) {
  $form["general"]["meez_profile_field"] = array('#type' => 'textfield',
    '#title' => t('Meez profile field name'), '#size' => 50, '#maxlength' => 50,
    '#default_value' => variable_get('meez_profile_field', 'profile_meez'),
    '#description' => t('The profile field where users store their meez name.'),
    );

  $form["general"]["meez_avatar_types"] = array('#type' => 'textfield',
    '#title' => t('Meez avatar types'), '#size' => 50, '#maxlength' => 50,
    '#default_value' => variable_get('meez_avatar_types', 'head_sm,head_lg,body_sm,body_lg,anim'),
    '#description' => t('A comma separated list of the types of avatars that you would like to have imported. Do not separate with spaces. The complete set would be head_sm,head_lg,body_sm,body_lg,anim.'),
    );
  $form["general"]["meez_avatar_user_page"] = array('#type' => 'textfield',
    '#title' => t('Meez avatar to show on the user page'), '#size' => 50, '#maxlength' => 50,
    '#default_value' => variable_get('meez_avatar_user_page', 'body_sm'),
    '#description' => t('The avatar to show on the user profile page (e.g. user/1).  Leave blank to disable this feature.'),
    );



  }
  return system_settings_form($form);
}

/**
 * Implementation of hook_user().
 */
function meez_user($op, &$edit, &$account, $category = NULL) {

  // Load avatars from MEEZ in case there was a change.
  switch ($op) {
    case 'register':
    case 'update':
    case 'insert':
      // Get the location of the meez in the profile.
      $meez_profile_field = variable_get('meez_profile_field', 'profile_meez');
      $avatars = array();
      // Maybe it's in the edit
      if (isset($edit[$meez_profile_field])) {
        $avatars = meez_get_avatars($edit[$meez_profile_field]);
        $edit = array_merge($edit, array('avatars' => $avatars));
      }
      break;
    case 'view':
      $user_page_type = variable_get('meez_avatar_user_page', 'body_sm');
      if (!empty($user_page_type)) {
        if (!empty($account->avatars[$user_page_type]->src)) {
          $picture = $account->avatars[$user_page_type]->src;
        }
        else if (variable_get('user_picture_default', '')) {
          $picture = variable_get('user_picture_default', '');
        }

        if (isset($picture)) {
          $alt = t("@user's profile", array('@user' => $account->name ? $account->name : variable_get('anonymous', t('Anonymous'))));
          $picture = theme('image', trim($picture), $alt, $alt, '', FALSE);
          if (!empty($account->uid) && user_access('access user profiles')) {
            $picture = l($picture, "user/$account->uid", array('title' => t("View @user's profile.", array('@user' => $account->name)), 'html' => TRUE));
          }

          $account->content['meez_avatar'] = array(
            '#type' => 'item',
            '#title' => 'Meez avatar',
            '#value' => $picture,
            '#attributes' => array('class' => 'picture'),
          );

        }
        else {
          return;
        }
      }
      break;
  }
}

/**
 *  Iterates through a user defined list of avatars to grab
 *  and then calls the function to grab them.
 */
function meez_get_avatars($av_username="") {
  $avatars = array();
  $avatar_types = explode(',', variable_get('meez_avatar_types', 'head_sm,head_lg,body_sm,body_lg,anim'));
  if (!empty($av_username)) {
    foreach ($avatar_types as $type) {
      $avatars[trim($type)] = meez_call_meez_api($av_username, $type);
    }
  }
  return ($avatars);
}


/**
 *  Connect with http://www.meez.com and get a user's meez avatar based on his/her meez username
 */
function meez_call_meez_api($username, $type) {

  $meez_api = 'http://partner.meez.com/avatar-ws/partner/getMeezImageURL.jsp';

  $avatar_types = array();
  $avatar_types = meez_get_types();

  $meez_api .= "?username=". $username .
         "&viewname=". $avatar_types[$type]->viewname .
         "&imageformat=". $avatar_types[$type]->imageformat .
         "&width=". $avatar_types[$type]->width .
         "&height=". $avatar_types[$type]->height;
  $result = drupal_http_request($meez_api);

  switch ($result->code) {
    case 304:
    case 301:
    case 200:
    case 302:
    case 307:
      $meez = $avatar_types[$type];
      $meez->src = strip_tags($result->data);
      $meez->alt = "avatar";

      break;
    default:
      watchdog('meez', 'The meez import seems to be broken, due to "%error".', array('%error' => theme('placeholder', $result->code .' '. $result->error)), WATCHDOG_WARNING);
      drupal_set_message(t('The meez import seems to be broken, because of error "%error".', array('%error' => theme('placeholder', $result->code .' '. $result->error))));
  }

  return $meez;
}

/**
 *
 */
function meez_get_types() {
  $avatar_types = array();

  $avatar_types["head_sm"]              = new stdClass();
  $avatar_types["head_sm"]->viewname    = "headshot";
  $avatar_types["head_sm"]->imageformat = "JPG";
  $avatar_types["head_sm"]->width       = "48";
  $avatar_types["head_sm"]->height      = "48";

  $avatar_types["head_lg"]              = new stdClass();
  $avatar_types["head_lg"]->viewname    = "headshot";
  $avatar_types["head_lg"]->imageformat = "JPG";
  $avatar_types["head_lg"]->width       = "100";
  $avatar_types["head_lg"]->height      = "100";

  $avatar_types["body_sm"]              = new stdClass();
  $avatar_types["body_sm"]->viewname    = "bodyshot";
  $avatar_types["body_sm"]->imageformat = "JPG";
  $avatar_types["body_sm"]->width       = "175";
  $avatar_types["body_sm"]->height      = "260";

  $avatar_types["body_lg"]              = new stdClass();
  $avatar_types["body_lg"]->viewname    = "bodyshot";
  $avatar_types["body_lg"]->imageformat = "JPG";
  $avatar_types["body_lg"]->width       = "300";
  $avatar_types["body_lg"]->height      = "400";

  $avatar_types["anim"]                 = new stdClass();
  $avatar_types["anim"]->viewname       = "bodyshot";
  $avatar_types["anim"]->imageformat    = "AGIF";
  $avatar_types["anim"]->width          = "300";
  $avatar_types["anim"]->height         = "400";

  return $avatar_types;
}
