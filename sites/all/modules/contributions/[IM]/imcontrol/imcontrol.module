<?php
// $Id$
/**
 * @file
 * Module to allow private comments
 */

/**
 * Implementation of hook_help().
 */
function imcontrol_help($path, $arg) {
  if ($path == 'admin/help#imcontrol') {
    $txt = 'This module allows registered members to have an embedded messenger on their profile pages.';
    return '<p>'. t($txt) .'</p>';
  }
}

/**
 * Implementation of hook_menu().
 */
function imcontrol_menu() {
  $items['user/%user/im'] = array(
    'title' => 'Online Presence',
    'page callback' => 'imcontrol_page',
    'page arguments' => array(1),
    'access callback' => 'imcontrol_view_access',
    'access arguments' => array(1), // <- userID (from % in path)
    'type' => MENU_LOCAL_TASK,
    'file' => 'imcontrol.page.inc',
  );
  $items['user/%user/im/view'] = array(
    'title' => 'View',
    'type' => MENU_DEFAULT_LOCAL_TASK, // Create tabs
    'weight' => -10,
  );
  $items['user/%user/im/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('imcontrol_edit_form', 1),
    'access callback' => 'imcontrol_edit_access',
    'access arguments' => array(1), // <- userID (from % in path)
    'type' => MENU_LOCAL_TASK,
    'file' => 'imcontrol.edit.inc',
  );
  // For processing the results from Microsoft
  $items['imcontrol'] = array(
    'title' => 'Windows Live Messenger IM Control',
    'page callback' => 'imcontrol_process',
    'access callback' => 'imcontrol_setup_access',
    'type' => MENU_CALLBACK,
    'file' => 'imcontrol.setup.inc',
  );
  return $items;
}

/**
 * Implements hook_perm()
 */
function imcontrol_perm() {
  return array(
    'access messenger',
    'embed messenger',
    'edit own messenger',
    'moderate messenger',
  );
}

/**
 * Check if installation of unique id is allowed.
 * Confirm the referer is Windows Live and session cookie is set.
 * @return
 * Boolean.
 */
function imcontrol_setup_access() {
  return (strpos(referer_uri(), 'settings.messenger.live.com/applications/websignup.aspx?returnurl=http://') && $_COOKIE["imcontrol_live"]);
}

/**
 * Check if 'Online Presence' tab should be shown.
 * @return
 * Boolean.
 */
function imcontrol_view_access($account) {
  $record = db_fetch_array(db_query(
    'SELECT pid, extra FROM {imcontrol} WHERE uid = %d',
    $account->uid
  ));
  // Only show if user is owner or moderator or if at least one messenger is set up
  return ((!empty($record['pid']) || !empty($record['extra'])) && user_access('access messenger')) || ($GLOBALS['user']->uid == $account->uid && user_access('access messenger')) || imcontrol_edit_access($account->uid);
}

/**
 * Check if user is allowed to edit messenger.
 * @return
 * Boolean.
 */
function imcontrol_edit_access($account) {
  return ($GLOBALS['user']->uid == $account->uid && user_access('edit own messenger')) || user_access('moderate messenger');
}

/**
 * Implementation of hook_theme().
 */
function imcontrol_theme() {
  return array(
    'imcontrol_display' => array(
      'arguments' => array('messenger' => NULL, 'key' => NULL, 'attributes' => NULL, 'show' => NULL),
      'file' => 'imcontrol.display.inc',
    ),
  );
}

/**
 * Implementation of hook_user().
 * For displaying Drupal online status
 */
function imcontrol_user($op, &$edit, &$account, $category = NULL) {
  if ($op == 'view') {
    $time_period = variable_get('user_block_seconds_online', 300); // Activity in 300s considered online
    $online = db_result(db_query('SELECT uid FROM {users} WHERE access >= %d AND uid = %d',
        time() - $time_period,
        $account->uid
      ));

    // Show online status beside profile name of displayed user
    if ($online) {
      $account->content['summary']['member_for']['#value'] .= ' <img src="'. base_path() . drupal_get_path('module', 'imcontrol') .'/images/online.gif" alt="'. t('Online') .'" title="'. t('Online') .'" />';
    }
    else {
      $account->content['summary']['member_for']['#value'] .= ' <img src="'. base_path() . drupal_get_path('module', 'imcontrol') .'/images/offline.gif" alt="'. t('Offline') .'" title="'. t('Offline') .'" />';
    }
  }
}

/**
 * Setup language string according to current Drupal language.
 * @return
 * Language string.
 */
function imcontrol_lang() {
  switch ($GLOBALS['language']->language) {
    case 'zh-hant':
      $live_lang = 'zh-TW';
      break;
    case 'zh-hans':
      $live_lang = 'zh-CN';
      break;
    case 'ja':
      $live_lang = 'ja-JP';
      break;
    default:
      $live_lang = 'en-US';
  }
  return $live_lang;
}

/**
 * Obtain color array from external file
 */
function imcontrol_default_colors($select = 'default') {
  include_once dirname(__FILE__) .'/im_color.inc.php';
  return _imcontrol_default_colors($select);
}

/**
 * Check if values in array are empty
 *
 * @param $messengers
 * Array of user messengers.
 * @return
 * Boolean.
 */
function _imcontrol_none($messengers) {
  foreach ($messengers as $value) {
    if (!empty($value)) {
      unset($value); // Destroy variable
      return FALSE;
    }
  }
  unset($value); // Destroy variable
  return TRUE;
}