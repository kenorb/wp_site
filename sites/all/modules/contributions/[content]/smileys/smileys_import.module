<?php
// $Id: smileys_import.module,v 1.2.2.8 2009/01/05 08:50:25 Gurpartap Exp $

/**
 * Implementation of hook_help().
 */
function smileys_import_help($section) {
  switch ($section) {
    case 'admin/settings/smileys/import':
      return t("To import new Smileys, download smiley packs for !phpBB or !Adium and extract them in <em>packs</em> folder under the smileys module's folder.", array('!phpBB' => l('phpBB', 'http://www.phpbb.com/styles/db/index.php?i=browse&mode=group:component&sub=smilies'), '!Adium' => l('Adium', 'http://www.adiumxtras.com/index.php?a=search&cat_id=2')));
  }
}

/**
 * Implementation of hook_menu().
 */
function smileys_import_menu() {
  $items = array();

  $items['admin/settings/smileys/import'] = array(
    'title' => t('Import'),
    'page callback' => 'smileys_import_page',
    'access arguments' => array('administer smileys'),
    'weight' => 2,
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/settings/smileys/export'] = array(
    'title' => t('Export'),
    'page callback' => 'smileys_export_page',
    'access arguments' => array('administer smileys'),
    'weight' => 3,
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/settings/smileys/import/add'] = array(
    'page callback' => 'smileys_import_add',
    'access arguments' => array('administer smileys'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/settings/smileys/import/delete'] = array(
    'page callback' => 'smileys_import_delete',
    'access arguments' => array('administer smileys'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Menu callback; Present the page for operations on Smiley packs.
 */
function smileys_import_page() {
  $header = array(t('Smiley Packs'), t('Operations'));
  $rows = array();
  $packs = smileys_import_packs();
  foreach ($packs as $pack) {
    $smileyp = db_fetch_array(db_query("SELECT * FROM {smileys} WHERE package = '%s'", $pack->name));
    $option_link = $smileyp ? l(t('Uninstall'), 'admin/settings/smileys/import/delete/'. $pack->name) : l(t('Install'), 'admin/settings/smileys/import/add/'. $pack->name);
    $rows[] = array(
      '<strong>' . $pack->name . '</strong>',
       $option_link
    );
  }
  $output = theme('table', $header, $rows);
  if (empty($rows)) {
    drupal_set_message(t('No smiley packs found.'));
    $output = '';
  }
  return $output;
}

/**
 * Menu callback; Present a page for .pak file for a Smiley pack.
 */
function smileys_export_page() {
  if ($package = arg(4)) {
    $smileys = db_query("SELECT * FROM {smileys} WHERE package = '%s' ORDER BY weight", $package);
    $path = drupal_get_path('module', 'smileys');
    if (!$packd = smileys_import_packs($package)) {
      drupal_set_message(t('Cannot find smiley package %pack.', array('%pack' => $package)));
      drupal_goto('admin/settings/smileys/export');
    }
    $smile_pak = "";
    $delimeter  = '=+:';
    while ($smiley = db_fetch_object($smileys)) {
      $smile_pak .= str_replace(dirname($packd->filename) . '/', '', $smiley->image) . $delimeter;
      $smile_pak .= $smiley->description . $delimeter;
      $smile_pak .= $smiley->acronyms . "\n";
    }
    $output  = "<div id=\"module-message\">\n";
    $output .= t('Please copy and paste the following text into a file at:<br /><strong>%package</strong><br /><em>with each smiley image in the same folder.</em>', array('%package' => $path . '/packs/' . $package . '/' . $package . '.pak')) . "\n";
    $output .= "</div>\n";
    $output .= "<div id=\"module-code\">\n";
    $output .= "<textarea cols=\"80\" rows=\"15\">\n";
    $output .= $smile_pak;
    $output .= "</textarea>\n";
    $output .= "</div>\n";
  }
  else {
    $packs = array();
    $header = array(t('Smiley Packs'), t('Operations'));
    $smileyp = db_query("SELECT DISTINCT package FROM {smileys} ORDER BY package");
    while ($pack = db_fetch_object($smileyp)) {
      if ($pack->package != 'Uncategorized') {
      $packs[] = $pack->package;
      $rows[] = array(
        '<strong>' . $pack->package . '</strong>',
         l(t('Export'), 'admin/settings/smileys/export/'. $pack->package)
      );
      }
    }
    $output = theme('table', $header, $rows);
    if (empty($rows)) {
      drupal_set_message(t('No smiley packs to export.'));
      $output = '';
    }
  }
  return $output;
}

/**
 * Custom callback; Scan for available packs.
 */
function smileys_import_packs($a = NULL) {
  $packs = file_scan_directory(drupal_get_path('module', 'smileys') . '/packs', '\.pak$');

  smileys_import_packs_plist($packs);

  ksort($packs);

  $pack_names = array();
  if ($a) {
    $packd = NULL;
    foreach ($packs as $pack) {
      if ($pack->name == $a) {
        $packd = $pack;
      }
    }
    return $packd;
  }
  return $packs;
}

function smileys_import_packs_plist(&$packs) {
  $plists = file_scan_directory(drupal_get_path('module', 'smileys') . '/packs', '\.plist$');

  foreach ($plists as $key => $plist) {
    $plists[$key]->name = str_ireplace(array(
      drupal_get_path('module', 'smileys') . '/packs/',
      '.AdiumEmoticonset',
      '/Emoticons.plist'),
    '', $plist->filename);
  }

  if (!empty($packs)) {
    $packs = array_merge($packs, $plists);
  }
  else {
    $packs = $plists;
  }
}

/**
 * Custom callback; Parse the plist information for a smiley package.
 */
function smileys_import_parse_plist($plist_pack = NULL) {
  include('plist.inc');

  $packs = array();
  $key = array();
  smileys_import_packs_plist($packs);
  
  foreach ($packs as $pack) {
    $path = dirname(__FILE__) . str_replace(drupal_get_path('module', 'smileys'), '', $pack->filename);

    $plistDocument = new DOMDocument();
    $plistDocument->load($path);

    $keys[$pack->name] = parsePlist($plistDocument);
  }
  if (!empty($plist_pack) && !empty($keys[$plist_pack])) {
    return $keys[$plist_pack];
  }
  return $keys;
}

function smileys_import_add_plist($plist_pack, $extension = '') {
  smileys_import_delete($plist_pack, 1);
  if (!$packd = smileys_import_packs($plist_pack)) {
    drupal_set_message(t('Cannot find smiley package %pack.', array('%pack' => $plist_pack)));
    drupal_goto('admin/settings/smileys/import');
  }
  $parse_data = smileys_import_parse_plist($plist_pack);

  foreach ($parse_data['Emoticons'] as $file => $smiley) {
    $acronyms = implode(' ', $smiley['Equivalents']);
    $acronyms = str_replace("<", "&lt;", $acronyms);
    $acronyms = str_replace(">", "&gt;", $acronyms);
    db_query( "INSERT INTO {smileys} (acronyms, image, description, standalone, promote_to_box, package) VALUES ('%s', '%s', '%s', %d, 0, '%s')",
      $acronyms,
      drupal_get_path('module', 'smileys') . '/packs/' . $plist_pack . $extension . '/' . $file,
      $smiley['Name'],
      1,
      $plist_pack
    );
  }
}

function smileys_import_add_pak($pack) {
  $delimeter  = '=+:';

  smileys_import_delete($pack, 1);
  if (!$packd = smileys_import_packs($pack)) {
    drupal_set_message(t('Cannot find smiley package %pack.', array('%pack' => $pack)));
    drupal_goto('admin/settings/smileys/import');
  }

  $fcontents = @file(dirname($packd->filename) . '/' . $pack . '.pak');
  for ($i = 0; $i < count($fcontents); $i++) {
    $smile_data = explode($delimeter, trim(addslashes($fcontents[$i])));
    for ($j = 2; $j < count($smile_data); $j++) {
      $smile_data[$j] = str_replace("<", "&lt;", $smile_data[$j]);
      $smile_data[$j] = str_replace(">", "&gt;", $smile_data[$j]);
      db_query("INSERT INTO {smileys} (acronyms, image, description, standalone, promote_to_box, package) VALUES ('%s', '%s', '%s', %d, 0, '%s')", str_replace("\'", "''", $smile_data[$j]), dirname($packd->filename) . '/' . str_replace("\'", "''", $smile_data[0]), str_replace("\'", "''", $smile_data[1]), 1, $pack);
    }
  }
}

/**
 * Menu callback; Delete a Smiley pack.
 */
function smileys_import_delete($packname, $redirect = 0) {
  $pack = $packname ? $packname : arg(5);
  db_query("DELETE FROM {smileys} WHERE package = '%s'", $pack);
  if ($redirect == 0) {
    drupal_set_message(t('Smiley package %pack uninstalled.', array('%pack' => $pack)));
    drupal_goto('admin/settings/smileys/import');
  }
}

/**
 * Menu callback; Add a Smiley pack.
 */
function smileys_import_add($packname) {
  $pack = $packname ? $packname : arg(5);

  $type = smileys_import_check_type($pack);
  if ($type == 'plist') {
    smileys_import_add_plist($pack, '.AdiumEmoticonset');
  }
  else if ($type == 'plist2') {
    smileys_import_add_plist($pack);
  }
  else {
    smileys_import_add_pak($pack);
  }

  drupal_set_message(t('Smiley package %pack installed.', array('%pack' => $pack)));
  drupal_goto('admin/settings/smileys/import');
}

function smileys_import_check_type($pack) {
  if (file_exists(dirname(__FILE__) . '/packs/' . $pack . '.AdiumEmoticonset/Emoticons.plist')) {
    return 'plist';
  }
  else if (file_exists(dirname(__FILE__) . '/packs/' . $pack . '/Emoticons.plist')) {
    return 'plist2';
  }
  else if (file_exists(dirname(__FILE__) . '/packs/' . $pack . '/' . $pack . '.pak')) {
    return 'pak';
  }
}