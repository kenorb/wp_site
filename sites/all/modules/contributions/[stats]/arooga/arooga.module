<?php
// $Id$

/**
 * @file
 * Logs (in the Drupal watchdog) page generation times that exceed
 * a threshold value, or are a record for the site so far.
 */

/**
 * Check times and log if neccessary.
 */
function arooga_timer() {
  global $_arooga_timer, $user;
  $mtime = microtime();
  $mtime = explode(' ', $mtime);
  $mtime = $mtime[1] + $mtime[0];
  $diff = round(($mtime - $_arooga_timer) * 1000, 2);
  if ($diff > variable_get('arooga_execution', 5000)) {
    // keep the message short so it can be easily read from the dblog summary page without getting cropped
    watchdog('arooga', 'Execution threshold exceeded! %time ms', array('%time' => $diff), WATCHDOG_NOTICE);
  }
  if ($diff > variable_get('arooga_execution_record', 0)) {
    watchdog('arooga', 'New high execution time! %time ms', array('%time' => $diff), WATCHDOG_NOTICE);
    variable_set('arooga_execution_record', round($diff, 0));
  }
}

/**
 * Implementation of hook_init().
 */
function arooga_init() {
  global $_arooga_timer;
  $mtime = microtime();
  $mtime = explode(' ', $mtime);
  $mtime = $mtime[1] + $mtime[0];
  $_arooga_timer = $mtime;
}

/**
 * Implementation of hook_exit().
 */
function arooga_exit() {
  arooga_timer();
}

/**
 * Implementation of hook_menu().
 */
function arooga_menu() {
  $items = array();
  $items['admin/settings/arooga'] = array(
    'title' => 'Arooga',
    'description' => 'Modify the threshold considered to be a long page execution.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('arooga_admin_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration')
  );
  return $items;
}

/**
 * Implementation of hook_settings().
 */
function arooga_admin_settings() {
  $form = array();
  $form['arooga_execution'] = array(
    '#type' => 'textfield',
    '#title' => t('Page execution threshold'),
    '#default_value' => variable_get('arooga_execution', 5000),
    '#size' => 4,
    '#maxlength' => 4,
    '#description' => t('Enter an integer in milliseconds. Any page which takes longer than this many milliseconds to build will be entered into the watchdog.')
  );
  $form['arooga_execution_record'] = array(
    '#type' => 'textfield',
    '#title' => t('Page execution record'),
    '#default_value' => variable_get('arooga_execution_record', 0),
    '#size' => 4,
    '#maxlength' => 4,
    '#description' => t('This is the current record (i.e. longest) page generation time. Set this to 0 to start the race again!')
  );
  return system_settings_form($form);
}

/**
 * Implementation of hook_requirements().
 *
 * Show the highest recorded page execution time.
 */
function arooga_requirements($phase) {
  $requirements = array();
  $t = get_t();
  if ($phase == 'runtime') {
    $requirements['arooga_high_execution_time'] = array(
      'title' => $t('Record high page execution time'),
      'value' => t('!time ms', array('!time' => variable_get('arooga_execution_record', 0))),
      'severity' => REQUIREMENT_INFO
    );
  }
  return $requirements;
}
